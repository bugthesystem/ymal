#!/usr/bin/env node

const args = require('args');

const read = require('../lib/read');
const clean = require('../lib/clean');
const setValues = require('../lib/setValues');
const write = require('../lib/write');

args
    .option(['f', 'file'], 'YAML file path')
    .option(['P', 'pattern-to-remove-classes'], 'Remove classes by pattern o_O!')
    .option(['C', 'classes-to-remove'], 'List of classes to remove', '')
    .option(['s', 'set-value'], 'Set property value form: `property=value`');

const flags = args.parse(process.argv);

flags.classesToRemove = flags.classesToRemove &&
    flags.classesToRemove.match(/(\w+)(,\s*\w+)*/g) ?
    flags.classesToRemove.split(',') : [];

flags.propertiesToSet = flags.setValue &&
    flags.setValue.match(/(\w+)(,\s*\w+)*/g) ?
    flags.setValue
        .split(',')
        .map(item => {
          let parts = item.split('=');
          return {prop: parts[0], value: parts[1]};
        }) : [];

/* Perform operation*/
read(flags.file)
    .then(doc => clean(doc, flags.patternToRemoveClasses, flags.classesToRemove))
    .then(doc => setValues(doc, flags.propertiesToSet))
    .then(doc => write(doc, flags.file))
    .then(() => console.log('Processing YAML file is completed!'));
